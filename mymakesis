#! /bin/bash

show_help() {
  echo "parameter 01: name of the application"
  echo "parameter 02: version of the SDK"
  echo "parameter 03: make target"
}

check_param() {
  echo "check parameter: ${1}"
  if [ -z ${1} ]; then
    show_help
    exit
  fi
}

call_cmd() {
  echo "$*"
  $@
}

check_param $@
APP="${1}"
echo "application: [${APP}]"
shift

check_param $@
SDK_VERSION="${1}"
echo "SDK version: [${SDK_VERSION}]"
shift

check_param $@
MAKE_TARGET="${1}"
echo "make target: [${MAKE_TARGET}]"

case "${SDK_VERSION}" in
  "5.0" )
    PLATFORM="gcce"
    TARGET="urel"
    SISFILE="${APP}.sis"
    SISXFILE="${APP}.sisx"
    PKGFILE="${APP}.pkg"
    CERFILE="mycert.cer"
    KEYFILE="mykey.key"
    SIGNPWD="0000"
    ;;
  "3.2" )
	  PLATFORM="gcce"
	  TARGET="urel"
    SISFILE="${APP}.sis"
    SISXFILE="${APP}.sisx"
    PKGFILE="${APP}.pkg"
    CERFILE="mycert.cer"
    KEYFILE="mykey.key"
    SIGNPWD="0000"
	  ;;
  "2.0" )
	  PLATFORM="armi"
	  TARGET="urel"
    PKGFILE="${APP}.pkg"
    ;;
	* )
	 echo "TBD"
	 exit
	 ;;
esac

export PATH=${HOME}/symbian/gnupoc/bin:${PATH}
export PLATFORM=${PLATFORM}
export TARGET=${TARGET}

export EPOCROOT=${HOME}/symbian/gnupoc/symbian-sdks/${SDK_VERSION}/
echo "epoc root: [${EPOCROOT}]"

STARTTIME=`date +%s`

case ${MAKE_TARGET} in
  all)
    cd group
    call_cmd bldmake bldfiles
    call_cmd abld build ${PLATFORM} ${TARGET}
    cd ..	
	
	  cd sis
    PKGFILE_TMP=__${PKGFILE}
    cp ${PKGFILE} ${PKGFILE_TMP}
    	  
    sed s:'$(EPOCROOT)':${EPOCROOT}:g -i ${PKGFILE_TMP}
    sed s:'$(PLATFORM)':${PLATFORM}:g -i ${PKGFILE_TMP}
    sed s:'$(TARGET)':${TARGET}:g -i ${PKGFILE_TMP}
    sed s:Epoc32:epoc32:g -i ${PKGFILE_TMP}
	
	  case "${SDK_VERSION}" in
	    "5.0" ) ##### S60 5th
        call_cmd makesis ${PKGFILE_TMP} ${SISFILE}
        call_cmd signsis -p ${SISFILE} ${SISXFILE} ${CERFILE} ${KEYFILE} ${SIGNPWD}
        ;;
	    "3.2" ) ##### S60 3rd
        call_cmd makesis ${PKGFILE_TMP} ${SISFILE}
        call_cmd signsis -p ${SISFILE} ${SISXFILE} ${CERFILE} ${KEYFILE} ${SIGNPWD}
		    ;;
      "2.0" ) ##### S60 2nd	    
	      echo "makesis ${PKGFILE_TMP}"
	      makesis ${PKGFILE_TMP}
	      ;;
	    * )
	      echo "TBD"
	      ;;
	  esac

    rm ${PKGFILE_TMP}
    ;;

  clean)
    call_cmd abld clean ${PLATFORM} ${TARGET}
    call_cmd bldmake clean
    
    END_TIME=`date +%s`
    ELAPSED=`expr $END_TIME - $START_TIME`
    echo ""
    echo "Clean finished - Elapsed time: " `date -d 00:00:$ELAPSED +%H:%M:%S`
    ;;

  *)
    echo "ERROR: Invalid command. Supported commands:"
    echo -e "\tall"
    echo -e "-tclean"
    ;;
esac

ENDTIME=`date +%s`
ELAPSED=`expr ${ENDTIME} - ${STARTTIME}`
echo -e "\nFinished - Elapsed time: `date -d 00:00:${ELAPSED} +%H:%M:%S`"
